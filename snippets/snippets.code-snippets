{
  "{ input }": {
    "prefix": "cb",
    "body": "{ ${1} }",
    "description": "{ input }"
  },
  "{ input } (hit tab when rcb shows)": {
    "prefix": "cc",
    "body": "cb",
    "description": "{ input } (hit tab when rcb shows)"
  },
  "import statement with curly braces": {
    "prefix": "rim",
    "body": "import { $1 } from '${2}';",
    "description": "import statement with curly braces"
  },
  "import statement without curly braces": {
    "prefix": "ri",
    "body": "import $1 from '${2}';",
    "description": "import statement without curly braces"
  },
  "import ReactDom statement": {
    "prefix": "rid",
    "body": "import ReactDom from 'react-dom';",
    "description": "import ReactDom statement"
  },
  "import React Native statement": {
    "prefix": "rin",
    "body": "import { $1 } from 'react-native';",
    "description": "import React Native statement"
  },
  "import styled-components": {
    "prefix": "ris",
    "body": "import styled from 'styled-components';",
    "description": "import styled-components"
  },
  "const styled component": {
    "prefix": "rsc",
    "body": "const ${1:StyledComponent} = styled.${2:tag}`\n  ${3:key}: ${4:value};\n`;",
    "description": "const styled component"
  },
  "destructuring of styles": {
    "prefix": "rdst",
    "body": "const { $1 } = styles;",
    "description": "destructuring of styles"
  },
  "long comment for documentation": {
    "prefix": "/**",
    "body": "/**\n* ${1:comment}\n*/",
    "description": "long comment for documentation"
  },
  "use effect hook": {
    "prefix": "rue",
    "body": [
      "useEffect(() => {",
        "${1}",
      "}, [${2}]);"
    ]
  },
  "use state hook": {
    "prefix": "rus",
    "body": [
      "const [${1}, set${2}] = useState(${3});"
    ]
  },
  "functional component method": {
    "prefix": "rfm",
    "body": [
      "const ${1} = (${2}) => {",
      "\t${3}",
      "};"
    ]
  },
  "use context hook": {
    "prefix": "ruc",
    "body": [
      "const { ${1} } = useContext(${2});"
    ]
  },
  "custom hook statement": {
    "prefix": "ruch",
    "body": [
      "const { ${1} } = use${2}(${3});"
    ]
  }
}